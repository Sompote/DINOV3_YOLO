# YOLOv13 with DINOv3 backbone enhanced at both P3 and P4 levels
# This configuration integrates DINOv3 features at multiple scales for comprehensive enhancement

nc: 80 # number of classes
scales: # model compound scaling constants
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024]   # Nano
  s: [0.50, 0.50, 1024]   # Small
  l: [1.00, 1.00, 512]    # Large
  x: [1.00, 1.50, 512]    # Extra Large

backbone:
  # [from, repeats, module, args]
  # YOLOv13 with YOLOv3-inspired darknet backbone
  - [-1, 1, Conv, [32, 3, 1]]       # 0
  - [-1, 1, Conv, [64, 3, 2]]       # 1-P1/2
  - [-1, 1, Bottleneck, [64]]       # 2
  - [-1, 1, Conv, [128, 3, 2]]      # 3-P2/4
  - [-1, 2, Bottleneck, [128]]      # 4
  - [-1, 1, Conv, [256, 3, 2]]      # 5-P3/8
  - [-1, 8, Bottleneck, [256]]      # 6: Standard P3 processing
  
  # DINOv3 enhancement at P3 level (256 channels)
  - [-1, 1, DINO3Backbone, ['dinov3_vitb16', True, 256]]  # 7: DINOv3 enhanced P3 features
  
  - [-1, 1, Conv, [512, 3, 2]]      # 8-P4/16
  - [-1, 8, Bottleneck, [512]]      # 9: Standard P4 processing
  
  # DINOv3 enhancement at P4 level (512 channels)
  - [-1, 1, DINO3Backbone, ['dinov3_vitb16', True, 512]]  # 10: DINOv3 enhanced P4 features
  
  # Continue YOLOv3-style processing
  - [-1, 1, Conv, [1024, 3, 2]]     # 11-P5/32
  - [-1, 4, Bottleneck, [1024]]     # 12

head:
  # YOLOv13 head with dual DINO3-enhanced features (P3 and P4)
  
  # P5 processing (large objects)
  - [-1, 1, Bottleneck, [1024, False]]     # 13
  - [-1, 1, Conv, [512, 1, 1]]             # 14
  - [-1, 1, Conv, [1024, 3, 1]]            # 15
  - [-1, 1, Conv, [512, 1, 1]]             # 16
  - [-1, 1, Conv, [1024, 3, 1]]            # 17 (P5/32-large)

  # P4 branch (medium objects) - uses DINO3-enhanced P4 features
  - [-2, 1, Conv, [256, 1, 1]]             # 18
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 19
  - [[-1, 10], 1, Concat, [1]]             # 20: cat DINO3-enhanced P4 features (256+512=768ch)
  - [-1, 1, Conv, [512, 1, 1]]             # 21: reduce channels to 512
  - [-1, 1, Bottleneck, [512, False]]      # 22
  - [-1, 1, Conv, [256, 1, 1]]             # 23
  - [-1, 1, Conv, [512, 3, 1]]             # 24 (P4/16-medium)

  # P3 branch (small objects) - uses DINO3-enhanced P3 features
  - [-2, 1, Conv, [128, 1, 1]]             # 25
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 26
  - [[-1, 7], 1, Concat, [1]]              # 27: cat DINO3-enhanced P3 features (128+256=384ch)
  - [-1, 1, Conv, [256, 1, 1]]             # 28: reduce channels to 256
  - [-1, 1, Bottleneck, [256, False]]      # 29
  - [-1, 1, Bottleneck, [256, False]]      # 30 (P3/8-small)

  # P3 -> P4 connection (both enhanced with DINO3)
  - [-1, 1, Conv, [256, 3, 2]]             # 31: Downsample P3 back to P4
  - [[-1, 24], 1, Concat, [1]]             # 32: Concat with P4 (256+512=768ch)
  - [-1, 1, Conv, [512, 3, 1]]             # 33: Process -> 512ch (final P4)

  # P4 -> P5 connection  
  - [-1, 1, Conv, [512, 3, 2]]             # 34: Downsample P4 to P5
  - [[-1, 17], 1, Concat, [1]]             # 35: Concat with P5 (512+1024=1536ch)
  - [-1, 1, Conv, [1024, 3, 1]]            # 36: Process -> 1024ch (final P5)

  # Detection heads - P3(256ch), P4(512ch), P5(1024ch) - both P3 and P4 enhanced with DINO3
  - [[30, 33, 36], 1, Detect, [nc]]        # 37: Detect(DINO3-P3, DINO3-P4, P5)