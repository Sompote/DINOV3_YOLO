# YOLOv13 with multi-scale DINOv3 enhancement using different variants for different scales
# This configuration uses optimized DINO variants for each detection scale

nc: 80 # number of classes
scales: # model compound scaling constants
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024]   # Nano
  s: [0.50, 0.50, 1024]   # Small
  l: [1.00, 1.00, 512]    # Large
  x: [1.00, 1.50, 512]    # Extra Large

backbone:
  # [from, repeats, module, args]
  # YOLOv13 with YOLOv3-inspired darknet backbone
  - [-1, 1, Conv, [32, 3, 1]]       # 0
  - [-1, 1, Conv, [64, 3, 2]]       # 1-P1/2
  - [-1, 1, Bottleneck, [64]]       # 2
  - [-1, 1, Conv, [128, 3, 2]]      # 3-P2/4
  - [-1, 2, Bottleneck, [128]]      # 4
  - [-1, 1, Conv, [256, 3, 2]]      # 5-P3/8
  - [-1, 8, Bottleneck, [256]]      # 6: Standard P3 processing
  
  # DINOv3-Small enhancement at P3 level (optimized for small objects)
  - [-1, 1, DINO3Backbone, ['dinov3_vits16', True, 256]]  # 7: DINO3-Small for P3 (small objects)
  
  - [-1, 1, Conv, [512, 3, 2]]      # 8-P4/16
  - [-1, 8, Bottleneck, [512]]      # 9: Standard P4 processing
  
  # DINOv3-Base enhancement at P4 level (optimized for medium objects)
  - [-1, 1, DINO3Backbone, ['dinov3_vitb16', True, 512]]  # 10: DINO3-Base for P4 (medium objects)
  
  - [-1, 1, Conv, [1024, 3, 2]]     # 11-P5/32
  - [-1, 4, Bottleneck, [1024]]     # 12: Standard P5 processing
  
  # DINOv3-Large enhancement at P5 level (optimized for large objects)
  - [-1, 1, DINO3Backbone, ['dinov3_vitl16', True, 1024]]  # 13: DINO3-Large for P5 (large objects)

head:
  # YOLOv13 head with scale-optimized DINO3 enhancements
  
  # P5 processing (large objects) - uses DINO3-Large
  - [-1, 1, Bottleneck, [1024, False]]     # 14
  - [-1, 1, Conv, [512, 1, 1]]             # 15
  - [-1, 1, Conv, [1024, 3, 1]]            # 16
  - [-1, 1, Conv, [512, 1, 1]]             # 17
  - [-1, 1, Conv, [1024, 3, 1]]            # 18 (P5/32-large, DINO3-Large enhanced)

  # P4 branch (medium objects) - uses DINO3-Base
  - [-2, 1, Conv, [256, 1, 1]]             # 19
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 20
  - [[-1, 10], 1, Concat, [1]]             # 21: cat DINO3-Base enhanced P4 features (256+512=768ch)
  - [-1, 1, Conv, [512, 1, 1]]             # 22: reduce channels to 512
  - [-1, 1, Bottleneck, [512, False]]      # 23
  - [-1, 1, Conv, [256, 1, 1]]             # 24
  - [-1, 1, Conv, [512, 3, 1]]             # 25 (P4/16-medium, DINO3-Base enhanced)

  # P3 branch (small objects) - uses DINO3-Small
  - [-2, 1, Conv, [128, 1, 1]]             # 26
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 27
  - [[-1, 7], 1, Concat, [1]]              # 28: cat DINO3-Small enhanced P3 features (128+256=384ch)
  - [-1, 1, Conv, [256, 1, 1]]             # 29: reduce channels to 256
  - [-1, 1, Bottleneck, [256, False]]      # 30
  - [-1, 1, Bottleneck, [256, False]]      # 31 (P3/8-small, DINO3-Small enhanced)

  # P3 -> P4 connection (both enhanced with scale-optimized DINO3)
  - [-1, 1, Conv, [256, 3, 2]]             # 32: Downsample DINO3-Small enhanced P3
  - [[-1, 25], 1, Concat, [1]]             # 33: Concat with DINO3-Base enhanced P4 (256+512=768ch)
  - [-1, 1, Conv, [512, 3, 1]]             # 34: Process -> 512ch (final P4)

  # P4 -> P5 connection  
  - [-1, 1, Conv, [512, 3, 2]]             # 35: Downsample P4 to P5
  - [[-1, 18], 1, Concat, [1]]             # 36: Concat with DINO3-Large enhanced P5 (512+1024=1536ch)
  - [-1, 1, Conv, [1024, 3, 1]]            # 37: Process -> 1024ch (final P5)

  # Detection heads - All scales enhanced with scale-optimized DINO3 variants
  - [[31, 34, 37], 1, Detect, [nc]]        # 38: Detect(DINO3-Small-P3, DINO3-Base-P4, DINO3-Large-P5)